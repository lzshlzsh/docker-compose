version: '3.7'

services:
  zookeeper:
    platform: linux/x86_64
    image: zookeeper:3.6.1
    ports:
      - target: 2181
        published: 2181
        protocol: tcp
        mode: host
    restart: on-failure
    volumes:
      - type: volume
        source: zkDataDir
        target: /data
      - type: volume
        source: zkDataLogDir
        target: /datalog

  desktop-connector:
    platform: linux/x86_64
    image: wenjunxiao/desktop-docker-connector
    restart: on-failure
    network_mode: "host"
    cap_add:
      - NET_ADMIN

  kafka1:
    platform: linux/x86_64
    image: wurstmeister/kafka:2.13-2.6.0
    ports:
      - target: 9092
        published: 9092
        protocol: tcp
        mode: host
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LOG_DIRS: /kafka
      KAFKA_NUM_PARTITIONS: 3
      KAFK_DEFAULT_REPLICATION_FACTOR: 3
      HOSTNAME_COMMAND: "ifconfig eth0 | awk '/inet addr/{print $$2}' | awk -F':' '{print $$NF}'"
    volumes:
      - type: volume
        source: kafka1
        target: /kafka
    depends_on:
      - zookeeper
      - kafka2
      - kafka3

  kafka2:
    platform: linux/x86_64
    image: wurstmeister/kafka:2.13-2.6.0
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LOG_DIRS: /kafka
      KAFKA_NUM_PARTITIONS: 3
      KAFK_DEFAULT_REPLICATION_FACTOR: 3
      HOSTNAME_COMMAND: "ifconfig eth0 | awk '/inet addr/{print $$2}' | awk -F':' '{print $$NF}'"
    volumes:
      - type: volume
        source: kafka2
        target: /kafka
    depends_on:
      - zookeeper

  kafka3:
    platform: linux/x86_64
    image: wurstmeister/kafka:2.13-2.6.0
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LOG_DIRS: /kafka
      KAFKA_NUM_PARTITIONS: 3
      KAFK_DEFAULT_REPLICATION_FACTOR: 3
      HOSTNAME_COMMAND: "ifconfig eth0 | awk '/inet addr/{print $$2}' | awk -F':' '{print $$NF}'"
    volumes:
      - type: volume
        source: kafka3
        target: /kafka
    depends_on:
      - zookeeper

  es:
    platform: linux/x86_64
    image: elasticsearch:7.9.0
    ports:
      - target: 9200
        published: 9200
        protocol: tcp
        mode: host
    environment:
      discovery.type: single-node
    volumes:
      - type: volume
        source: es
        target: /var/lib/elasticsearch

  kibana:
    platform: linux/x86_64
    image: kibana:7.9.0
    ports:
      - target: 5601
        published: 5601
        protocol: tcp
        mode: host
    environment:
      ELASTICSEARCH_HOSTS: http://es:9200
    depends_on:
      - es

  mysql:
    platform: linux/x86_64
    image: mysql:5.7
    command: --log-bin=mysql-bin --expire-logs-days=1 --server-id=123 --default-time-zone=Asia/Shanghai --binlog-row-image=full --character-set-server=utf8 --gtid-mode=on --enforce-gtid-consistency=on --log-slave-updates=on
    ports:
      - target: 3306
        published: 3307
        protocol: tcp
        mode: host
    environment:
      MYSQL_ROOT_PASSWORD: 123456
    volumes:
      - type: volume
        source: mysql
        target: /var/lib/mysql
    depends_on:
      - mysql_slave

  mysql_slave:
    platform: linux/x86_64
    image: mysql:5.7
    command: --log-bin=mysql-bin --expire-logs-days=1 --server-id=124 --default-time-zone=Asia/Shanghai --binlog-row-image=full --character-set-server=utf8 --gtid-mode=on --enforce-gtid-consistency=on --log-slave-updates=on
    ports:
      - target: 3306
        published: 3309
        protocol: tcp
        mode: host
    environment:
      MYSQL_ROOT_PASSWORD: 123456
    volumes:
      - type: volume
        source: mysql_slave
        target: /var/lib/mysql

  mysql8:
    platform: linux/x86_64
    image: mysql:8.0
    command: --log-bin=mysql-bin --expire-logs-days=1 --server-id=123 --default-time-zone=Asia/Shanghai --binlog-row-image=full --character-set-server=utf8 --gtid-mode=on --enforce-gtid-consistency=on --log-slave-updates=on
    ports:
      - target: 3306
        published: 3308
        protocol: tcp
        mode: host
    environment:
      MYSQL_ROOT_PASSWORD: 123456
    volumes:
      - type: volume
        source: mysql8
        target: /var/lib/mysql
    depends_on:
      - mysql8_slave

  mysql8_slave:
    platform: linux/x86_64
    image: mysql:8.0
    command: --log-bin=mysql-bin --expire-logs-days=1 --server-id=124 --default-time-zone=Asia/Shanghai --binlog-row-image=full --character-set-server=utf8 --gtid-mode=on --enforce-gtid-consistency=on --log-slave-updates=on
    ports:
      - target: 3306
        published: 3310
        protocol: tcp
        mode: host
    environment:
      MYSQL_ROOT_PASSWORD: 123456
    volumes:
      - type: volume
        source: mysql8_slave
        target: /var/lib/mysql

  debezium_connect:
    platform: linux/x86_64
    image: debezium/connect:1.5
    ports:
      - target: 8083
        published: 8083
        protocol: tcp
        mode: host
    environment:
      CONFIG_STORAGE_TOPIC: debezium_connect_configs
      OFFSET_STORAGE_TOPIC: debezium_connect_offsets
      STATUS_STORAGE_TOPIC: debezium_connect_statuses
      BOOTSTRAP_SERVERS: kafka1:9092
    depends_on:
      - zookeeper
      - kafka1
      - mysql

  canal_connect:
    platform: linux/x86_64
    image: canal/canal-server:v1.1.5
    ports:
      - target: 11111
        published: 11111
        protocol: tcp
        mode: host
    #      - target: 11110
    #        published: 11110
    #        protocol: tcp
    #        mode: host
    environment:
      - canal.instance.global.spring.xml=classpath:spring/default-instance.xml
      - canal.zkServers=zookeeper:2181
      - kafka.bootstrap.servers=kafka1:9092
      - canal.serverMode=kafka
      - canal.instance.master.address=mysql:3306
      - canal.instance.dbUsername=root
      - canal.instance.dbPassword=123456
      - canal.instance.filter.regex=test\..*
    entrypoint: [ "/bin/bash", "-c", "sed -i -e 's/kafka.bootstrap.servers.*/kafka.bootstrap.servers = kafka1:9092/' /home/admin/canal-server/conf/canal.properties && /alidata/bin/main.sh /home/admin/app.sh" ]
    depends_on:
      - kafka1
      - mysql
      - zookeeper

  clickhouse1:
    platform: linux/x86_64
    image: yandex/clickhouse-server:21.9
    ports:
      - target: 8123
        published: 8123
        protocol: tcp
        mode: host
      - target: 9000
        published: 9000
        protocol: tcp
        mode: host
    volumes:
      - type: volume
        source: clickhouse1
        target: /data/clickhouse/clickhouse-server
      - ./conf/metrika1.xml:/etc/clickhouse-server/metrika.xml
      - ./conf/config.xml:/etc/clickhouse-server/config.xml
      - ./conf/clickhouse_test_user.xml:/etc/clickhouse-server/users.d/clickhouse_test_user.xml
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    depends_on:
      - zookeeper
      - clickhouse2
      - clickhouse3
      - clickhouse4
      - clickhouse5
      - clickhouse6

  clickhouse2:
    platform: linux/x86_64
    image: yandex/clickhouse-server:21.9
    volumes:
      - type: volume
        source: clickhouse2
        target: /data/clickhouse/clickhouse-server
      - ./conf/metrika2.xml:/etc/clickhouse-server/metrika.xml
      - ./conf/config.xml:/etc/clickhouse-server/config.xml
      - ./conf/clickhouse_test_user.xml:/etc/clickhouse-server/users.d/clickhouse_test_user.xml
    ulimits:
      nofile:
        soft: 262144
        hard: 262144

  clickhouse3:
    platform: linux/x86_64
    image: yandex/clickhouse-server:21.9
    volumes:
      - type: volume
        source: clickhouse3
        target: /data/clickhouse/clickhouse-server
      - ./conf/metrika3.xml:/etc/clickhouse-server/metrika.xml
      - ./conf/config.xml:/etc/clickhouse-server/config.xml
      - ./conf/clickhouse_test_user.xml:/etc/clickhouse-server/users.d/clickhouse_test_user.xml
    ulimits:
      nofile:
        soft: 262144
        hard: 262144

  clickhouse4:
    platform: linux/x86_64
    image: yandex/clickhouse-server:21.9
    volumes:
      - type: volume
        source: clickhouse4
        target: /data/clickhouse/clickhouse-server
      - ./conf/metrika4.xml:/etc/clickhouse-server/metrika.xml
      - ./conf/config.xml:/etc/clickhouse-server/config.xml
      - ./conf/clickhouse_test_user.xml:/etc/clickhouse-server/users.d/clickhouse_test_user.xml
    ulimits:
      nofile:
        soft: 262144
        hard: 262144

  clickhouse5:
    platform: linux/x86_64
    image: yandex/clickhouse-server:21.9
    volumes:
      - type: volume
        source: clickhouse5
        target: /data/clickhouse/clickhouse-server
      - ./conf/metrika5.xml:/etc/clickhouse-server/metrika.xml
      - ./conf/config.xml:/etc/clickhouse-server/config.xml
      - ./conf/clickhouse_test_user.xml:/etc/clickhouse-server/users.d/clickhouse_test_user.xml
    ulimits:
      nofile:
        soft: 262144
        hard: 262144

  clickhouse6:
    platform: linux/x86_64
    image: yandex/clickhouse-server:21.9
    volumes:
      - type: volume
        source: clickhouse6
        target: /data/clickhouse/clickhouse-server
      - ./conf/metrika6.xml:/etc/clickhouse-server/metrika.xml
      - ./conf/config.xml:/etc/clickhouse-server/config.xml
      - ./conf/clickhouse_test_user.xml:/etc/clickhouse-server/users.d/clickhouse_test_user.xml
    ulimits:
      nofile:
        soft: 262144
        hard: 262144

  clickhouse_client:
    platform: linux/x86_64
    image: yandex/clickhouse-client:21.9
    command: --host clickhouse1
    stdin_open: true
    tty: true
    depends_on:
      - clickhouse1

  oracle:
    platform: linux/x86_64
    image: oracleinanutshell/oracle-xe-11g:latest
    ports:
      - target: 1521
        published: 1521
        protocol: tcp
        mode: host
      - target: 5500
        published: 5500
        protocol: tcp
        mode: host
    environment:
      ORACLE_ALLOW_REMOTE: "true"

  dns:
    platform: linux/x86_64
    image: jpillora/dnsmasq
    ports:
      - "127.0.0.1:53:53/udp"
    environment:
      - TZ=Asia/Shanghai
      - HTTP_USER=root
      - HTTP_PASS=123456
    volumes:
      - ./conf/dnsmasq.conf:/etc/dnsmasq.conf

  pulsar1:
    platform: linux/x86_64
    image: apachepulsar/pulsar-all:2.9.2
    user: root
    volumes:
      - ./conf/pulsar_broker1.conf:/pulsar/conf/broker.conf
      - ./conf/pulsar_client.conf:/pulsar/conf/client.conf
    command: /pulsar/bin/pulsar broker
    depends_on:
      - zookeeper
      - bookie1
      - bookie2
      - bookie3
      - pulsar2
      - pulsar3

  pulsar2:
    platform: linux/x86_64
    image: apachepulsar/pulsar-all:2.9.2
    user: root
    volumes:
      - ./conf/pulsar_broker2.conf:/pulsar/conf/broker.conf
    command: /pulsar/bin/pulsar broker

  pulsar3:
    platform: linux/x86_64
    image: apachepulsar/pulsar-all:2.9.2
    user: root
    volumes:
      - ./conf/pulsar_broker3.conf:/pulsar/conf/broker.conf
    command: /pulsar/bin/pulsar broker

  pulsarinit:
    platform: linux/x86_64
    image: apachepulsar/pulsar-all:2.9.2
    user: root
    command: ["/bin/bash", "-c", "/pulsar/bin/pulsar initialize-cluster-metadata --cluster pulsar-cluster --zookeeper zookeeper:2181/pulsar --configuration-store zookeeper:2181/pulsar --web-service-url http://pulsar1:8080,pulsar2:8080,pulsar3:8080 --web-service-url-tls https://pulsar1:8443,pulsar2:8443,pulsar3:8443 --broker-service-url pulsar://pulsar1:6650,pulsar2:6650,pulsar3:6650 --broker-service-url-tls pulsar+ssl://pulsar1:6651,pulsar2:6651,pulsar3:6651 && /pulsar/bin/pulsar initialize-transaction-coordinator-metadata -cs zookeeper:2181/pulsar -c pulsar-cluster"]

  pulsarcli:
    platform: linux/x86_64
    image: apachepulsar/pulsar-all:2.10.0
    user: root
    volumes:
      - ./conf/pulsar_client.conf:/pulsar/conf/client.conf
    command: /usr/bin/tail -f /etc/profile

  bookie1:
    platform: linux/x86_64
    image: apachepulsar/pulsar-all:2.9.2
    user: root
    volumes:
      - type: volume
        source: pulsar1
        target: /data
      - ./conf/pulsar_bookkeeper1.conf:/pulsar/conf/bookkeeper.conf
    command: /pulsar/bin/pulsar bookie

  bookie2:
    platform: linux/x86_64
    image: apachepulsar/pulsar-all:2.9.2
    user: root
    volumes:
      - type: volume
        source: pulsar2
        target: /data
      - ./conf/pulsar_bookkeeper2.conf:/pulsar/conf/bookkeeper.conf
    command: /pulsar/bin/pulsar bookie

  bookie3:
    platform: linux/x86_64
    image: apachepulsar/pulsar-all:2.9.2
    user: root
    volumes:
      - type: volume
        source: pulsar3
        target: /data
      - ./conf/pulsar_bookkeeper3.conf:/pulsar/conf/bookkeeper.conf
    command: /pulsar/bin/pulsar bookie

  doris1:
    platform: linux/x86_64
    image: apache/incubator-doris:build-env-ldb-toolchain-latest
    volumes:
      - type: volume
        source: doris1
        target: /doris
      - /home/lzs/.m2:/root/.m2
      - /home/lzs:/home/lzs
      - /data:/data
    command: [ "/bin/bash", "-c", "start_be.sh --daemon && start_fe.sh --daemon && tail -f /etc/profile"]
    environment:
      DORIS_HOME: /doris/incubator-doris/output
      PATH: /doris/incubator-doris/output/fe/bin:/doris/incubator-doris/output/be/bin:/var/local/ldb-toolchain/bin/:/var/local/thirdparty/installed/bin/:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin

  pg:
    platform: linux/x86_64
    image: postgres:9
    environment:
      POSTGRES_PASSWORD: 123456
      POSTGRES_USER: root
    volumes:
      - type: volume
        source: pg
        target: /var/lib/postgresql/data
    ports:
      - target: 5432
        published: 5432
        protocol: tcp
        mode: host

volumes:
  zkDataDir:
  zkDataLogDir:
  kafka1:
  kafka2:
  kafka3:
  es:
  mysql:
  mysql_slave:
  mysql8:
  mysql8_slave:
  clickhouse1:
  clickhouse2:
  clickhouse3:
  clickhouse4:
  clickhouse5:
  clickhouse6:
  pulsar1:
  pulsar2:
  pulsar3:
  doris1:
  pg:
